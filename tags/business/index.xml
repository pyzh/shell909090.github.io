<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Business on Shell&#39;s Home</title>
    <link>http://shell909090.org/tags/business/</link>
    <description>Recent content in Business on Shell&#39;s Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC-BY-SA4.0</copyright>
    <lastBuildDate>Fri, 16 Mar 2012 09:04:25 +0800</lastBuildDate>
    <atom:link href="http://shell909090.org/tags/business/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>答一封读者来信——同机构内不同组织合作的分析</title>
      <link>http://shell909090.org/blog/archives/2116/</link>
      <pubDate>Fri, 16 Mar 2012 09:04:25 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/2116/</guid>
      <description>&lt;p&gt;这次的题目是一个读者的问题，她的原文很复杂，我不记得了。我大致的理解是，在同一个领导下面的多个不同的组织间的合作，对其进行分析。
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;   
唔，怎么说呢，这个问题其实挺好玩的。我首先给没参加工作的同学们讲解一点基础常识，一般来说，公司/企业/组织，都是树形结构的，又非单纯的树形结构。所谓树形结构，就是一个头，手下有几个人，每个人负责一个方面。每个人又有一些手下，如此往复，就形成了一颗管理树。管理树的一个关键禁忌是越级，没有毕业或者刚毕业的同学千万要记牢，越级是很忌讳的，无论是哪个方向。如果你有个问题，需要向上反映，一定要经过你的直接领导，或者在你直接领导在场的情况下反映。而作为领导指挥下级的时候，也一定要交代他的直接领导，或者他的直接领导在场。通常你作为二层领导的时候，资历已经足够让你知道越级的害处。因此经常发生的问题是向上越级。&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

   
一般来说，这个管理树的层级越多，公司效率越低。你可以很容易的想明白，如果你对一个关键问题的报告，要通过20层领导才能递交给足够关键的人，你们公司的决策和反应速度怎么快的起来。但是反过来说，在节点不变的情况下，如果要降低树的高度，那只有在一个节点上挂更多的子节点，即一个领导需要直接管理更多下属，处理更多问题。

&lt;/div&gt;

&lt;div&gt;

   
而更复杂的是，正统的树形结构，应当是由上级进行信息协调。但是为了增加效率，通常来说管理树还不是一个严谨的树形结构，而是一个网状结构。例如，理论上说，销售问题应当是由销售部门搞定的。但是销售中可能涉及很多技术问题，因此需要工程师来参与，而且是长期参与。因此我们有个职位，叫做售前工程师，专门负责这个问题。售前工程师属于销售部还是研发部负责呢？我们在行政级别上归属销售部管理，但是实际上这些工程师还要长期参与研发部工作，这期间他们实际上受到研发部管理。这就是所谓的交叉管理状况。

&lt;/div&gt;

&lt;div&gt;

   
直观上看，我们很容易得出一个推论。当组织规模增加的时候，这些问题就会如同一团乱麻一般纠结起来。事实上也是如此，同样的组织结构，当组织规模增加的时候，效率一定是严格下降的。只是不同的结构下降的速度不尽相同。我们常听到小公司比较有竞争力，原因很大程度上是因为小公司只有职能和级别划分，而没有严谨的管理树。甚至有的时候，连职能和级别划分都没有。这种管理在感觉上会比较混乱，因此一般只能在大家都是哥们的时候用这招。

&lt;/div&gt;

&lt;div&gt;

   
因此，很多大型公司采取的一种常见管理方式是组织化，OU。所谓OU，即脱离集团的直接领导后仍然可独立存在的组织。这些组织可能是控股公司，子公司，分公司，公司内部门，产品线，项目组，形态很多。OU化的核心意义是，为交叉管理提供了一个最大化边界，为集团管理提供了一个最小单元。由于集团管理的最小单元的增大，因此集团可以管理的规模也更加的大。通常来说，OU就是这么被理解的。

&lt;/div&gt;

&lt;div&gt;

   
OU和正常的组织部分有几点不同。通常来说，OU有独立的财政系统，OU间互相是需要结算的，OU的老大是要部分承担OU的盈亏的。所以有的时候，你受某公司邀请前去开会，往往能看到组织者和行政部的人。行政部的人管理整个会议室，完事后是要管组织者结帐的——如果这个集团的行政部是独立的话。同样，如果OU总是亏，这个亏损就会被评估。老板会考虑，外包是不是更合算。如果是，这个OU很可能就被裁撤。

&lt;/div&gt;

&lt;div&gt;

   
因此OU间的关系既是在同一个集团内的合作关系，也属于竞争关系。因此你可以看到，去年腾讯网的广告位放过淘宝，而不是拍拍。原因就非常简单。淘宝不是同一个集团的，走的是正对正的生意关系，一般来说给的钱更多。拍拍是自己人，老总为了省经费，总会想拉关系少给点。如果给拍拍不能带来现金，也没法带来KPI，那就给淘宝吧。这就属于集团内协调不善导致拆台的结果。

&lt;/div&gt;

&lt;div&gt;

   
OK，上文废话半天，总算言归正传。在不同的OU之间，进行产品和技术合作，基本来说得依据OU的级别来细说。越是细小，合作越多的OU，其特性就越接近非独立部门。而越是庞大的OU，例如下属控股公司，就越接近独立公司。非独立部门间进行产品和技术合作的好处是，双方有充分的信任关系，因而双方可以充分讨论其中利弊，并且得到比较好的结果。而独立公司间，往往有互相不信任的情况（这个也看的，不少公司间的关系甚至好的工程师会互相为对方修bug），因此有些时候就很无奈的出现了纳什均衡。

&lt;/div&gt;

&lt;div&gt;

   
这个现象其实正是OU所带来的双刃剑。越是OU化充分，公司的可管理规模就越大，但是手下间互相打架的情况就越严重。如果你愿意这么理解的话，红杉每年投了一堆风投，其中不少是做同一领域的。理论上你可以把这些公司都理解为红杉的下属，只是红杉没有参与管理——也没道理参与管理。这些公司间，不少是死对头。这正是最强的OU化和松散的外部协调管理所带来的结果。如果情况对红杉有利，他是否可以凭借庞大的股份介入，终止持有股份的几家公司间的对立呢？这会为红杉带来庞大的利益。这同样也可以看做是削弱OU，加强外部调整的结果。

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>外包和派遣的一些问题和顾虑</title>
      <link>http://shell909090.org/blog/archives/2090/</link>
      <pubDate>Fri, 10 Feb 2012 07:01:39 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/2090/</guid>
      <description>&lt;p&gt;很多公司老总很头痛的一个问题是外包。相比自己生产程序，外包有一定的优势，也有劣势。
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;优势&lt;br /&gt;
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;1.外包便宜，从实现角度，比自己养程序员便宜很多。毕竟自己养程序员还要交三金所得税，外包程序员需要自己管理自己的三金所得税——通常都不会交。所以比自己养的要便宜的多。&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

2.在安全性上，外包并不一定比自己养程序员差。毕竟自己养程序员也没法杜绝跳槽，也没法杜绝恶意的underhand代码。

&lt;/div&gt;

&lt;div&gt;

劣势

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

1.不稳定，极度不稳定。能不能完成并不像自己养的程序员那样有一个项目经理在跟踪，搞不好就是到期了，基本什么都没有。虽然可以不付钱，但是被耽误的时间更麻烦。

&lt;/div&gt;

&lt;div&gt;

2.逼良为娼。如果你的需求类似一个论坛，他们就会诱使你做一个论坛。论坛可以用开源的项目经过定制和修改来完成，看起来工程浩大牛逼XX，实际上没花多少时间，实现小开销大收入的目的。如果你真的没被说动，他们会先答应你的一切需求，等期限快到了再告诉你，论坛做起来很快的，改一点需求吧。如果再说不动，参考问题1。

&lt;/div&gt;

&lt;div&gt;

3.良莠不齐。多年筛选下来，很多优秀的，可靠的外包团队真的很厉害。但是混事的团队混事能力也很厉害，很多问题说的头头是道，价钱也比正儿八经做的便宜不少。你觉得便宜的就是混子？错，有时混事的团队比正经外包公司还贵。万一一个没看准，那就又参考问题2了。

&lt;/div&gt;

&lt;div&gt;

4.外包没法解决资金来源。很多老板对这个问题只会哈哈一笑，不过有的时候这确实是个问题。不是每个外包团队都能提供发票的，很多团队没有挂靠公司，或者挂靠公司但是发票加税点。这时候你开出来的外包费用就无法按照服务费计算，只能当作其他费用处理。要么你自己找发票填上，要么就扣税。

&lt;/div&gt;

&lt;div&gt;

   
我看下来，愿意做外包的老板，大概不足一成，而且大多都是逼上梁山没办法了（要么人力来不及按时完成了，要么没人会做了），才外包一部分。

&lt;/div&gt;

&lt;div&gt;

\

&lt;/div&gt;

&lt;div&gt;

   
相比起来，人力资源派遣是个新行当。这行当和外包差不多，只是他们不分离做，他们找人去你公司做。

&lt;/div&gt;

&lt;div&gt;

优势

&lt;/div&gt;

&lt;div&gt;

1.你的项目经理可以盯着他们了。

&lt;/div&gt;

&lt;div&gt;

2.派遣多数都是从公司来的，大半有发票。

&lt;/div&gt;

&lt;div&gt;

3.你让干吗就干吗，不行滚蛋。

&lt;/div&gt;

&lt;div&gt;

劣势

&lt;/div&gt;

&lt;div&gt;

1.可没比自己养程序员便宜，搞不好还贵。

&lt;/div&gt;

&lt;div&gt;

   
所以很多公司对人力派遣也不是很喜欢。不过我说句实话，要是需要一个特殊类型的人才，预计时间不长，或者想试用一下，不妨考虑考虑。

&lt;/div&gt;

&lt;div&gt;

\

&lt;/div&gt;

&lt;div&gt;

   
目前很多外包也参考了HR派遣的做法，他们的做法是这样的。谈项目。达成协议。派团队去你的公司，该干吗干吗。验收。撤回团队。

&lt;/div&gt;

&lt;div&gt;

    你的项目经理可以随时验证他们的工作，因此也不会出现逼良为娼的情况。

&lt;/div&gt;

&lt;div&gt;

\

&lt;/div&gt;

&lt;div&gt;

   
但是无论如何，请自己找一个项目经理！不要让你的程序员来做项目经理的事情，更不要指望什么都不管丢钱下去程序就会自动长出来！

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>吐槽招聘几件事</title>
      <link>http://shell909090.org/blog/archives/2010/</link>
      <pubDate>Fri, 09 Dec 2011 10:06:55 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/2010/</guid>
      <description>&lt;div&gt;

= 海投海发，要件不全 =

&lt;/div&gt;

&lt;div&gt;

   
这TMD是招聘/猎头/投简历中最我X的事情了，没有之一。凡是招聘不写公司名字，不写工作地点（跨城招聘的时候），职位不写工作要求或者工作范围，一概视为不靠谱。同理，凡是简历不写自己名字（别笑，真TM有），联系方式的（哥们，我找您得烧纸是不？），工作资历或者技术专长（您干嘛来了），也一概不理。

&lt;/div&gt;

&lt;div&gt;

   
另外，我好像写过，原来面试过一姐们，两次！这姐们一看就是内向人，话都说不利索。干IT起码得有能耐把一件事情讲述清楚（好听不是要件，易懂也不是，清晰不歧义才是），也得善于听明白别人的问题。这话都说不利索的主，您就算来八次都一样。明显是海投的时候，压根不记得这公司自己是不是来过了。

&lt;/div&gt;

&lt;div&gt;

   
别笑，php跑到python地界上捞人的，您也差不多。事情一着急就满世界散传单的，您还指望来啥人？

&lt;/div&gt;

&lt;div&gt;

\

&lt;/div&gt;

&lt;p&gt;= 乱叫乱收，文不对题 =
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;   
任何一个事情，信任和合作是成功的基础。所以从现在HR市场的运作来看，这事情就成不了。三四个人办的小公司，敢宣传自己资金雄厚。一个才学了半年电脑的人，做一个项目挂一个，敢说自己被多家公司挖角。&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

   
这事情是怎么来的？貌似开始的时候，小公司不说资金雄厚就没人关注。简历上说才学了半年，做项目全挂了就找不到工作。反正工作这个事情又没人核实，就拼命往里面注水。结果市场上充斥着注水猪肉，你还没辙。技术手段在高端市场是有效的，低端就不用想了。高端市场的人，往往在一个领域里面投入了相当的心血。为了简历注水被臭掉名声是不合算的。但是低端市场的人，学三个月电脑，来这个市场插草标卖一番，卖得不动，隔天就转了行。我听说过最夸张的传说是一个程序员三个月后去做了厨师，当然，另一个人也差不多，一个前端MM三个月后开了甜品店。不过后者是真心喜欢，前者算啥？

&lt;/div&gt;

&lt;div&gt;

   
所以，这事情博弈下来，劣币驱逐良币，市场上就充斥着无效的信息。到处都是资金雄厚的公司和技术强大的程序员，偏偏HR说招不到人，程序员说找不到工作。

&lt;/div&gt;

&lt;div&gt;

\

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

= 描述绕弯弯，内行听门道 =

&lt;/div&gt;

&lt;div&gt;

    HR懂不懂技术，招聘上就看的出。拿好听的词乱堆的，肯定是外行。

&lt;/div&gt;

&lt;div&gt;

   
网管不叫网管，叫网络工程师。杀毒不叫杀毒，叫系统安全管理。要加班不叫要加班，叫抗压性强。工资低不叫工资低，叫做合伙。小公司不叫小公司，叫创业团队。薪水能开多低开多低不叫薪资面谈，叫待遇从优。会不叫会，一律叫精通。

&lt;/div&gt;

&lt;div&gt;

   
MD我出门看个招聘，创业团队寻求合伙网络工程师，要求抗压性强，精通系统安全，待遇从优。

&lt;/div&gt;

&lt;div&gt;

   
你干吗不干脆直说小公司低价招聘几个肯加班的网管，会杀毒就成，薪资面谈。这招聘写的我还以为google传奇在中国开服了呢。

&lt;/div&gt;

&lt;div&gt;

   
招聘不妨写的肯切点，有啥说啥。尤其是在论坛之类的可以互动交流的地方招聘，大家不都是傻瓜。

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

\

&lt;/div&gt;

&lt;div&gt;

= 关键不是你有多少，而是你给我多少 =

&lt;/div&gt;

&lt;div&gt;

   
有些公司，招聘上面动辄写公司有多少多少投资注入。实话说，这有什么关系呢？如果一家有钱的公司，开3000薪水。一家小公司，开4000，我觉得还是后者更有吸引力。倒闭？找工作也就是一两个月的事。我们按照3500一个月算，差值就是7000。做半年基本就持平了。小公司只要能干上一年，肯定比号称有钱的主来的实在。

&lt;/div&gt;

&lt;div&gt;

   
同样，类似的问题也有招聘上面写我们有多少多少大牛。实话说，这个也不重要，我们的直属领导和工作同事是不是大牛才是关键。后者对自己有直接帮助，工作起来也开心。要是总架构是个大牛，但是同事都是一帮菜鸟，那大家一起辛苦。所以我写过一篇blog，为什么大牛都爱扎堆。

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>我擦，又回来了</title>
      <link>http://shell909090.org/blog/archives/1943/</link>
      <pubDate>Fri, 14 Oct 2011 12:49:48 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1943/</guid>
      <description>&lt;p&gt;这忖劲的，闪了十年整后，我又跑回了北京。半夜两点，二号航站楼，大巴出去就是航空食品公司，再过去是空无一人的彩虹桥。再下去照例是修了20多年，小学时候就参观过，现在居然还tmd在收费的天下第一收费站。窗外看看，靠，辅路还tm跟那用着呢，就多了根机场快线。&lt;br /&gt;
   
从车窗抬头向上看，北京的夜空很漂亮，今天又是月圆之夜。以前经常偷偷跑出来看月亮，被爸妈打个半死。没想到多年后，有一天我会看到北京这么漂亮的夜空，而且不看不行。不知道明天从塔楼往外看，能不能看到碧空如洗的蓝天和连绵不绝的燕山。&lt;br /&gt;
   
不过这次估计是我头次在机场高速进四环的时候没堵车。别说堵车了，车都不见几辆。京密路上车也很少——有几个有精神半夜三点不睡觉跟大街上飚车啊。这师傅还真tm牛，一辆大巴居然开上了100。发车不过十分钟，就过了牛王庙，跟国展停了第一站。这地跟原来差不多，就多了几个字，栏杆换了一套，漆皮完好。往前开，双安商场依旧灯火辉煌。&lt;br /&gt;
    改变的从来不是这个世界，改变的只有我们。&lt;/p&gt;

&lt;p&gt;From P81HD&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>给初创小公司的几句话（四）</title>
      <link>http://shell909090.org/blog/archives/1911/</link>
      <pubDate>Fri, 16 Sep 2011 10:12:08 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1911/</guid>
      <description>&lt;p&gt;第四个故事来自一个朋友的笑话。说某人从一家公司辞职了，朋友问说什么情况。某人说，和老板相处不来。老板看到有人上班看网页，就出了条规定，不许上班时间看网页，否则罚款。看到有人带朋友进办公室，就出条规定，不许上班时带朋友进办公室，否则罚款。上个月老婆出差，没人照顾家里的仓鼠，带去两天，出条规定，不得带宠物上班。某人情感受到了强烈的伤害，所以愤而辞职。&lt;br /&gt;
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;   
其实说起来，这些事情都不是什么大事，鸡毛蒜皮到了我们可以当笑话说的地步。细究起来也确实是员工应当执行的，属于正常雇员的基本素养。不过如果您自己开家公司，照着上面的做，搞不好手下还真就一堆辞职的。&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

   
从某种意义上说，这是一个心理问题。在IBM，或者Oracle这种大公司，出现这些条款没人觉得有什么不对，关键在于两点。一方面，大公司本身就给人一种正儿八经，板着个脸的印象。员工进公司的时候，就知道自己随时会碰到各种狗屁倒灶的规定，有一定的心理准备。小公司通常老总天天见，搞不好下班还一起吃饭喝酒，上班的时候板起脸来做规矩，情感上受得了受不了就不好说了。另一方面，大公司的规定相对完备，什么可以什么不可以都规定的非常详细。小公司难免挂一漏万，天天改规矩，确实不怎么好看。

&lt;/div&gt;

&lt;div&gt;

   
反过来说，这也是初创公司对大公司的优势。在大公司里，管理层显然不会留意到每个人的特性，并且针对性的管理。然而初创公司就那么几号人，大部分都是熟人。要针对管理不是一件不可能的事情。老婆出差，家里仓鼠可以带到公司，顺便睡在公司做程序得了，反正家里也没人。诸如此类的事情并不怎么难做。当然，当初创公司上了一定规模（推荐大概是10-30人）后，管理转换必然要产生阵痛。然而也远好过在三两个人的公司里面规定四五十条的规范。

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>为什么恳谈行不通</title>
      <link>http://shell909090.org/blog/archives/1901/</link>
      <pubDate>Tue, 06 Sep 2011 14:51:35 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1901/</guid>
      <description>&lt;p&gt;几乎每个公司的老总都有“事到临头才发现自己是公司最后一个知道的人”的杯具经历，因此几乎没有例外的，每个公司基本都有所谓的“恳谈会”，或者叫做面谈。基本就是HR，或者行政，对职员进行一对一面谈，试图找出些什么东西来。不过就贝壳自己的经历来看，这种恳谈会的作用非常小。一个公司的所有员工，一年谈一次，能得到一个有用的信息，算是运气不错了。
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;   
为什么恳谈行不通呢？因为阶级。恳谈会首先就分了两个阶级——老板和员工。我们知道不是老板的问题，作为恳谈的受益人，他们没道理刻意阻止恳谈的效果。唯一的理由只有一个——职员不愿意告诉老板一些有用的事情，他们说的都是可有可无的废话。其实细细想想也是当然的，因为老板是受益人的话，员工多数就是受害人了。大部分老板感兴趣的事情——心不在焉的员工，心怀鬼胎的管理层——在被老板知道的同时，都会受到惩罚。因此，从心理上说，恳谈会给员工的感觉永远是出卖。&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

   
在这种心理的作用下，员工会很快的形成攻守同盟。他们不出卖别人的秘密，同时希望别人也不出卖他们的，即使他们没有秘密。在这种情况下，使用奖励是愚蠢的。被奖励者无疑会成为告密者，然后收到大家的歧视和排挤，迅速的消失。奖励与其说是鼓励恳谈，不如说是让员工坚定的不要开口——即使他们真的想说什么的话。即使是秘密的奖励，实际上也很难实行。如果真的有人做了，这个人你真的敢用么？

&lt;/div&gt;

&lt;div&gt;

   
恳谈没用，那怎么办？基本是两个办法。一个是让部分员工以员工的身份收集信息，公布这件事情，同时不要公布他们的身份。这是一种古老的思路，其核心是威慑和平衡。员工而言，不知道这些人是否存在，他们会说什么，这会让他们不敢做一些太过明目张胆的事情。

&lt;/div&gt;

&lt;div&gt;

   
当然，另一种更为有效同时也更为成功的思路是，取消老板和员工阶级。没有了老板和员工阶级，员工自然会说任何他们想说的事情。对公司不利，就是对他们自己不利，这样公司才不可阻挡。然而要达成这点，必须放弃很多东西。首先，作为老板，你再也不是公司的全权管理者。也就是说，你必须通过规则来控制每个人，而不是直接控制。而规则来自你和员工的商讨，而不是你的脑子。

&lt;/div&gt;

&lt;div&gt;

   
区别？如果你看到一个上班打游戏的家伙，让他滚蛋了。你是对的，然而你是老板。如果你看到一个上班打游戏的家伙，你回去查了查，规则中并没有说不能打游戏。所以你在某个会议上说，我们最好不要这样，然后让员工讨论一下，什么时候可以打游戏，什么时候不可以。什么游戏是可以玩的，什么是不可以的，打游戏有哪些惩罚。那么你就是一个普通管理者。

&lt;/div&gt;

&lt;div&gt;

   
听起来没有什么好处，而且罗嗦的要命？明明正确的事情，为什么不能直接做？可你知道，这只是把隐藏在台面下的东西端上来而已，管理者从来都不是神——甚至不是国王。你可以直接控制你的员工，也可以强行制定规则，大部分人也不会有反应。然而，当你的政策和现实差异越来越大的时候，你的员工离职率也会居高不下。过高的离职率会带来很多问题，当部门普通员工离职率小于10%每年的情况下，公司基本不会受到任何影响。当部门普通员工离职率超过20%每年的情况下，管理者的执行就会不太流畅，时断时续。当部门员工离职率超过50%每年，或者中级以上管理者每年离职超过10%的时候，公司大量资源会消耗在招聘，培训，交接等问题上，同时事务实行经常卡壳。当部门员工离职率超过100%（不要惊讶，这不是个铁道部的笑话），或者中层管理者离职超过50%每年的时候，公司基本失去功能。因此老外的罢工可不是闹着玩的。

&lt;/div&gt;

&lt;div&gt;

   
和员工商讨规则，并且连自己也需要遵守规则，这在保证员工利益的同时，也让他们感到参与感。参与感会增加他们归属于这个集体的情感，从而帮助你发现和管理问题——一切都是自发的。更妙的是，即使薪水略低，员工也很少离职。当然，作为双刃剑，你要知道，有的时候员工会联合起来进行薪水谈判。如果双方都是理智的进行谈判的话，我相信对于一个健康的软件公司，这只会让他更健康。当然，更重要的是，你需要自己遵守自己的规则，让规则成为权威。

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>给初创小公司的几句话（三）</title>
      <link>http://shell909090.org/blog/archives/1865/</link>
      <pubDate>Wed, 27 Jul 2011 14:59:17 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1865/</guid>
      <description>&lt;p&gt;第三篇故事，是来自于贝壳自己的惨痛经历，在另一位朋友那里也有类似教训，可惜他未及早听我一句。&lt;br /&gt;
   
贝壳原来在一家公司里面做项目经理，公司做企业定制开发，现在仍在，所以具体情况隐去不表。因为某些情况，老板叫贝壳做了项目经理，按照资历和能力来说，其实并未足够。贝壳精通的是C++开发，&lt;a href=&#34;http://xn--2rqx66cusk2vbo3t7v9a.net&#34;&gt;而项目是使用.net&lt;/a&gt;技术做的。因此贝壳对项目的管理能力实际上打了一个折扣，只能负责结构设计和协调。当时对项目管理也不是很精通，可以说是半吊子水平。公司承接了一个企业的业务系统开发，经过前期准备，我们团队就开去了客户那里进驻。客户要求，界面一定要漂亮。因此我们选型下来的结果，&lt;a href=&#34;http://xn--ykq9w171g.net&#34;&gt;使用了.net&lt;/a&gt;
3.5的wpf开发。开发过程中其实还是有很多问题，很多都是新手问题，暴露贝壳总体设计和项目把握的缺陷。不过这和今天主题无关，就略过不谈了。&lt;a href=&#34;http://xn--tiqv79c94y.net&#34;&gt;主要是.net&lt;/a&gt;
3.5开发，到了最后发生了几个严重问题。&lt;br /&gt;
   
首先第一个问题，是客户有很多win2000机器，甚至还有一些win98。这个在当初系统设计的时候完全没有考虑。我们开发的机器一律全是winxp，.net3.5
wpf可以完全的运行在上面。而对于win2000，wpf是无法安装的。于是，我们就必须要求客户升级到winxp。企业用户，他们还必须使用正版。其次，.net
3.5在进行远程SOAP调用的时候，会出现严重的内存泄漏。其实并不是真的泄漏了，&lt;a href=&#34;http://xn--epr083b.net&#34;&gt;只是.net&lt;/a&gt;
3.5的SOAP系统没有考虑调用接口可能多达数百个的情况，对每个函数都进行了序列化器缓存。这个缓存会耗费100-200M的空间，加上其他开销，我们的系统总开销是200-300M，比大部分游戏还高。这个直接导致客户运行我们系统的时候，必须多加一倍的内存。&lt;br /&gt;
   
更郁闷的问题还在后面，wpf是使用dx渲染的系统，因此如果客户没有独立显卡，系统速度就会慢如龟速。wpf的部署必须使用完整sdk，2.0的runtime安装包只有20M，而3.5的完整sdk高达350M。我们在每台机器上安装的时候都是用U盘完整安装350M的sdk。不过这都不是最郁闷的，最郁闷的是，我们项目最后问题实在太多，有个员工做了一个web版的。界面难看很多，但是方便移植部署，内存消耗小。瞬间得到全企业上下一致支持，他们的老板还问我们，当初为什么不这么设计。贝壳哪里好意思说，您不是要漂亮么？&lt;br /&gt;
   
实话说，要不是老板和客户关系好，我们非要给愤怒的客户踢出大门不可。这一个项目，成功的是老板，失败的是贝壳。&lt;br /&gt;
   
总结下来，两个教训。首先是设计必须实地的调查一线需求，不能光听上面的就得出结论，也不能光看部分典型用户就得出结论。如果有一些关键用户对构架支持不良，业务上又不能放弃，就必须权衡得失，甚至修改构架。如果当时我们知道win2000乃至win98的事情，就压根不会考虑使用wpf来做界面。第二个，就是不能迷信技术，或者激进的使用无法掌控的技术。宁可使用最土的办法，老老实实的把业务做出来。新技术由于刚刚出现，因此很多问题都没有完全暴露，很多领域也没有经验积累。例如这个例子里面的内存占用问题，安装包问题，系统问题，都是到了部署时才发生的问题。使用新技术，就会随时面对无人发现的问题，这和RPG的踩地雷战斗是一样的经历。只是这里不但没有经验值，而且踩多了还会直接挂掉。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>给初创小公司的几句话（二）</title>
      <link>http://shell909090.org/blog/archives/1861/</link>
      <pubDate>Thu, 21 Jul 2011 14:31:28 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1861/</guid>
      <description>&lt;p&gt;上面一篇，贝壳说了说老板搞外行指挥内行的问题。这篇反过来，是我一个朋友X的经历。他经历的更加的传奇一些，是一个内行指挥外行的经历。&lt;br /&gt;
   
X是一家外企的程序员，原本这家外企没有IT部，后来为了做市场，于是成立了IT部。他是头一批的老员工，情况和贝壳类似。在他们之后，进来了一个很有水平的程序员Y。Y的水平很高，所以很快的就成了IT部实际的领导人。原本的外企中方经理很是器重，承诺分一定的公司股份，但是要求IT部能够达到一定目标。例如流量多少，来多少IP访问等等。Y很快就带领整个IT部开始行动了，需求分析，计划制定，时间节点分布，系统架构，都很中规中矩。SSH开发网站本身就是一个中规中矩的过程，没有太多的创意可说。半年不到，系统就上线了，基础测试通过，公司上下都很开心。&lt;br /&gt;
   
问题发生在Y拿到公司股份之后，通常按照协议，股份是不能很快变现的。我不知道Y和公司怎么谈的协议，X君作为一个局外人，也只能告诉我一些小道消息。据说Y的股票居然很快就出手了，而后Y君很快的辞职，开了家咨询公司。&lt;br /&gt;
   
而后公司系统陆续发生了一些问题，本来很稳定的流量一下缩水到几分之一，而X君说，他们的营销策略从未有大的改变。更麻烦的是，系统总是出一些莫名其妙的小问题，经常无法访问。公司没办法，只能高价请回Y君来解决。每次都是问题很快解决，但是另一个问题又再出现。几次往返后，公司实在不堪忍受，就再找了一个高手进来看看系统。X君说，人家上午过来，下午走人。说从未看过如此混乱不堪的代码，几乎没有可维护性，建议直接重写。&lt;br /&gt;
   
然后公司就陷入了两难，要不要重写呢？不重写，这个系统显然没有任何继续发展的可能。重写，又如何保证新来的工程师不会搞出这种不可维护的系统。&lt;br /&gt;
   
据说，到X走的时候，中方经理已经被迫辞职了，外方决定找印度阿三来解决这个问题。当然，后面就是一个新的传说了。&lt;br /&gt;
   
整个事情好像是一个职场阴暗面的故事，感觉平平无奇。不过实际上，整个故事还是有几个神奇的地方存在的。首先，公司没有做过Y君的背景调查么？还是说Y君以前一直OK？其次，通常股份都是不可立刻变现的，必须经过三到五年，其目的就是防止这种事情。类似的条件还有无法转让什么的，都跑到哪里去了？最后，公司所有人，包括X君在内，没有发现Y君的系统是不可维护的么？我始终感觉这个故事的背后还有其他故事，只是这已经不是我们讨论的要点了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>给初创小公司的几句话（一）</title>
      <link>http://shell909090.org/blog/archives/1856/</link>
      <pubDate>Thu, 14 Jul 2011 17:30:29 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1856/</guid>
      <description>&lt;p&gt;贝壳做程序员到现在，没去过国企（好吧，和他们有过合作，可实在看不惯他们的作派，死也不去），没去过外企（也是有合作，可惜英语太差），全在各种私企里面打转。从初创公司到中型外包都呆过，还曾是某初创公司的第一个员工，可惜结局不怎么好——关门了。初创公司的一些问题，可谓前仆后继，大家的死法差不多。当员工时，不好给老板直接提意见。现在私下里偷偷说说，有想开公司的当故事听吧。&lt;br /&gt;
   
初创公司第一怕，就是没有经验。没有经验的程序员，没有经验的经理，所以很多事情都不知道怎么办，只能摸着石头过河。实话说，完全摸石头的，还不如不开了。最起码最起码，老板做什么，就必须熟悉这行。想干互联网，必须熟悉互联网。想干企业，就必须熟悉企业。没这个要求，不如不干。至于技术上没经验，可以找合适的程序员。如果老板熟悉互联网，很多做阿里巴巴阿，做腾讯之类的傻话都不会说出来了，他要做的一定是个没有的东西，或者说在中国没有，或者有，但是市场刚要起步。在一个饱和市场内挑战一个巨头，这和唐吉柯德挑战风车是一样的，能得到的只是海明威笔下的鱼骨头。&lt;br /&gt;
   
初创公司没有人熟悉技术怎么办？这就要看你的公司类型了。如果你决定以业务为核心，可以找个诚实可靠（别说看人看不准，如果人看不准，公司哪里都会碰壁）有经验的程序员做主管，记得谈分红或者股份，然后放手给他。他会帮你管理的很好的。不过记得偶尔就他的做法咨询一下其他懂行的朋友。通常这类程序员最好是来自于大型企业IT部或者大型互联网公司，他们会把大型互联网公司的规范带过来。当然，也不要无条件的接受。先文档后程序，重测试轻代码之类的东西对初创是不适用的。起码要等公司有10来个程序员再回头补课。这些人构成的程序部是写不出什么天才程序的，但是可以有效廉价的把你要做的业务做起来。&lt;br /&gt;
   
如果你决定以技术为核心（实话说，中国这种公司比例不高），你起码得有一个高手在手里，才能谈公司的问题。而且公司开起来，你得分给他很高比例的股份。大部分这类创业老板，都是自己就是高级程序员，觉得挺了解程序了。这种情况下的建议反过来，你要找熟悉市场的人，不要觉得你很熟悉市场。程序员不是一个典型用户，除非你的用户都是程序员，否则大部分的需求需要重新考虑，甚至商业模式都未必成立。&lt;br /&gt;
   
初创公司最怕的情况，就是老板不懂技术，也不找人，胡乱指挥。贝壳呆的头家公司，现在已经关门了，所以说说问题也不大。老板决定做销售管理软件，实话说这个决定没什么问题，问题是老板的生产过程。他先找了三个程序员过来（两个新手一个老手，贝壳就是第一个员工，当时年轻，什么都不懂），然后请一个大学教授当顾问。由于大学老师都比较忙，因此他让其中一个比较有经验的程序员负责平时管理，不过还是按照员工待遇。然后他开始做需求，结果时间太少，需求做半本就开始做程序。一下就犯了大忌，需求未系统化。老程序员心知肚明，可是能说什么呢？自己连合伙人都不是，根本说不动老板。&lt;br /&gt;
   
然后制定计划的时候，老程序员制定了一个相对保守的计划——这是当然，因为只有一个老程序员和两个新手，他怎么也不敢激进阿。老板当场否决，把时间提前了两个月，变成三个月完成，并且承诺会加派招程序员。又是一个大忌，拍脑袋决定周期，也没有标杆事件控制。当天我就看到老程序员白着脸进去黑着脸出来，然后很郁闷的修改时间。不过后面的事情好玩的很，程序员来一个走一个，基本留不住人。现在想起来，当时工资实在太低了。工资低是有理由的，贝壳当时基本什么都不会，光学SSH就学了一个多月——还基本不大会用。&lt;br /&gt;
   
做产品的时候，考虑使用数据库，一下子居然挑中了oracle。现在反观，我也不知道怎么做的决策。用oracle做互联网的公司，目前为止我还没听说过第二家，因为oracle的长处在于事务和稳定性，而不是性能。由于维护麻烦，因此也没有买oracle自己的授权，而是第三方公司卖的5W的版本。就贝壳后来所知，oracle从未有这个级别的版本，他们的产品都是20W一个CPU，可以支持25个同步连接来卖的。天知道这个所谓第三方公司是怎么回事。由于配置麻烦（当时还是8），因此抽调我过去处理oracle的安装问题。贝壳就花了一个多月，把linux和oracle安装学了一遍。不过这一来，一个多月贝壳就基本没怎么写代码。一个初创公司一个员工一个月不写代码，可谓是很无谓的损失了。&lt;br /&gt;
   
更夸张的是，由于老板考虑部署的时候，立足点都是——用户太多怎么办，压根没考虑过没用户的问题。所以他开始就自己买机器进行IDC部署。偏偏普通服务器他又觉得太贵，所以还自己装服务器。贝壳再跑了好几次电脑城，买服务器装。虽然采购还是按照采购流程走的，但是又大概一周不干程序。服务器终于全部搞定上线了，贝壳大概一个月花掉了。几个月过去，老板发现进度跟不上计划，就先推迟了发布计划，然后找大家紧急开会。结论是，他加速做需求，我们加班搞定代码。可是有用么？完全没用。下面几个月糊里糊涂，贝壳都不记得自己做了点啥了。发布计划一推再推，贝壳一点信心都没有，就辞职走人了。&lt;br /&gt;
   
后来听说，在长达一年多的开发后，他们还是搞定了系统，并且正式上线销售。但是只有几个客户愿意付钱。坚持了一段时间，老板看实在赚不到钱，只有关门走人。&lt;br /&gt;
   
回顾整个里面的问题，关键是外行领导内行。做顾问的教授是内行，但不是搞互联网的，又没时间。老程序员名义上是经理，却不能否决提议。实际上是最不懂互联网的老板自己在做决策，导致最关键的几个问题上，压根没有发现决策是错的。次之的问题，是为了省钱而浪费时间。程序员出价太低，招的都是新手。买oracle舍不得买原厂带服务的，非要自己搞。服务器都不买现成的，自己组装。这里面能节约的时间，绝对不是花钱能买到的。里面还有什么老板策划需求拍脑袋，听风就是雨，甚至要求我们做一个子功能，叫做&amp;rdquo;中国地图在线”之类的小事就不提了。&lt;br /&gt;
   
虽说不想埋怨老板，不过贝壳确实在那家公司浪费了生命中的八个月，除了自学linux和oracle安装外没有剩下任何有用的技能。现在这段事情也被贝壳当作一个教训，很多事情不是看起来好就好的，如果事情看起来不靠谱，早点割肉退出不失为一个好的方案。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>初创公司的九句傻话</title>
      <link>http://shell909090.org/blog/archives/1854/</link>
      <pubDate>Wed, 13 Jul 2011 09:56:20 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1854/</guid>
      <description>&lt;p&gt;人都有小时候，初创公司会说些傻话，没啥好奇怪的。不过如果老板持续说傻话，没意图深入学习互联网业，你还是考虑跳了吧。&lt;br /&gt;
&lt;br /&gt;
1.我要做个淘宝/阿里巴巴/百度/腾讯那样的网站/产品。&lt;br /&gt;
   
通常这句傻话下面，往往还跟着，10W块，三个月，够不够？没说后半句就已经够傻了，说了差不多够格上春晚了。你当自己是腾讯啊，没管理没技术的初创公司，靠抄袭，和各大IT巨头的拳头产品拼，没有比这个更傻的了。要抄的对象是外国公司还算合理，具体情况具体分析。&lt;br /&gt;
&lt;br /&gt;
2.我们有来自名校出身的CXO——XXX，来自海外大公司的技术总监——XXX，前XXX公司创意总监——XXX，在他们的带领下，我们一定能XXXXXX。&lt;br /&gt;
   
好吧，有的时候，这句话不是那么傻。问题是，说这句话的人，十个里面大概会失败九个。一方面，来自名门不代表能力超群，有时也可能是能力/人品问题而被踢出来的。另一方面，牛人多了也不行。俗话说，别带两个闹钟出海，带一个或三个。到时候财务总监说砍，业务总监说干，两个人谁都不让谁，老板的头一个比三个大。要是两个牛都在同一个部门，例如两个技术总监，那就更有趣了。&lt;br /&gt;
&lt;br /&gt;
3.我有个创意，不过最近很忙，没法详细整理出来。我大概讲一下，你们先做起来，回头我给你们补充。&lt;br /&gt;
    连创意细节都不重视，或者不愿意说，还创业呢，失业吧。&lt;br /&gt;
&lt;br /&gt;
4.这里有份策划，你看看要多久？半年？不行，太长了。给你们加20个人，三个月给我做出来，早出来有奖金。&lt;br /&gt;
   
很明显，这老板肯定没看过brooks的那本《人月传说》。通常这份策划一年能出来就算幸运了。&lt;br /&gt;
&lt;br /&gt;
5.暂时没有工资/工资不高，不过我们有原始股份，将来考虑上市。&lt;br /&gt;
   
明显忽悠傻小子呢，一穷二白一起创业，是要双方彼此熟悉和信任对方为前提的。人都要吃饭，光给股份不给钱，来的是什么人就不用多说了吧。&lt;br /&gt;
&lt;br /&gt;
6.恩，策划大概是这样。服务器准备怎么搞？租用？太花钱了。我们自己组装服务器好了，反正不复杂，你就顺手搞了吧，便宜多了。&lt;br /&gt;
   
创业初期，专心自己的业务。一会想自己搞服务器，一会想自己搞所需要的业务库，一会又想把某个功能做成独立网站做接口，你真的想明白自己要干什么了么？&lt;br /&gt;
&lt;br /&gt;
7.我要做一个产品，界面要炫，一定要好看。操作要人性化，要让用户满意。功能要全，人家有的我们都不能少。&lt;br /&gt;
    老板，您这产品是做什么的？&lt;br /&gt;
&lt;br /&gt;
8.马云当年十八罗汉闯天下，我们为什么不行。豆瓣开始三台服务器顶住了所有业务，我们为什么不行。&lt;br /&gt;
   
是啊是啊，朱镕基当了总理，你为什么不行？释迦摩尼当了佛祖，你为什么不行？抛开各种因素分析，就想着和别人比，你真的有那个条件么？&lt;br /&gt;
&lt;br /&gt;
9.钱不是问题。&lt;br /&gt;
    恩，多数问题是没钱。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HR该干吗</title>
      <link>http://shell909090.org/blog/archives/1819/</link>
      <pubDate>Wed, 01 Jun 2011 10:32:36 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1819/</guid>
      <description>&lt;p&gt;这个帖子（&lt;a href=&#34;http://www.douban.com/people/March_Liu/miniblog/446401835/&#34;&gt;http://www.douban.com/people/March_Liu/miniblog/446401835/&lt;/a&gt;）里，蘑菇叔（好吧，现在该叫牛柳叔了）和别人在争论一个问题。其实我对他们的争论没什么兴趣，但是有几个论点挺有意思的。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;面试题不应该拿回家做。面试题是即时抽查对方个人程序能力的一种测试，要是拿回家，就变成测试亲友团能力了。七大姑八大姨的儿子面试，知道你是个程序员，让帮忙做题，难道还能不做？我曾经也帮人做过面试题，不过做之前我都会和他们说。你可想好了，这些题目不算简单，我做没什么问题，没意外你应该能进去。但是这些题目比你能力超出太多，进去后你能不能呆的住，有什么后果自行负责。对方多半是一脸不在乎的说，先进去慢慢学吧。我知道结果的两个，一个进去三天，连试用期都没过就被开出来了。因为是试用期关系，企业还不管赔。另一个则是苦熬三个月后还是扫地出门。目前我的结论是，允许把试题带回家做的企业是不靠谱的企业，允许做题时上网也一样。做面试题时会去想作弊的技术应该转行去做销售。当年吴士宏的《逆风飞扬》里面说，主管问她会不会一个技术，她不会，但是说会，回家后连夜学起来。这种行为在销售上也许是值得称赞的行为，本人也够努力。但是作为技术岗位，这种思路是行不通的，而且非常不负责。技术是依靠长期积累的，指望在几天内突飞猛进根本不现实。相反，你闯祸的可能远比做好的可能大。做一名技术，就得踏踏实实把事情做妥当了。&lt;/li&gt;
&lt;li&gt;HR不应该管工资。蘑菇叔的另一个观点是，HR不应该管工资。实际上，我一直不知道HR该做什么。当年我做招聘的时候，基本就是两种思路。一种是来一个人，HR告诉我大概要多少薪水，我谈下来直接向老总汇报。另一个是我面试能力，然后告诉HR这人我们大概给多少薪水，最高给多少。虽然名义上是HR主导的工资谈判，但实际上做出判断的一定是技术主管。因为除了技术主管，没有人（包括HR）清楚这个人能力能够为企业带来多少价值。HR评估价格的方法通常都是对比法，用证书和资历去做加减。可是证书和资历一方面容易造假，另一方面是否和企业技术合拍不得而知。&lt;/li&gt;
&lt;li&gt;性价比太高的人都是不稳定因素。这句基本就是“价格围绕价值波动”的另一个表述形式。一旦一个人，你觉得他的性价比非常高，基本是几种可能。一种是他的能力非常特殊，只有少数企业需要。一旦从你公司离职，对他非常不利。而对于你们企业来说，找其他人非常不利。因此你才会觉得他的性价比特别高。第二种是因为这个人在其他方面有所求，例如商业间谍，或者需要从你公司里面积累一些必要的技术和资历。最后一种是因为——这个人快离职了。如果你发现一个人性价比特别高，请务必查一下为什么。是否是特殊能力很好判断，是否需要积累一些必要的能力和资历也不难分析。如果不是，请务必先考虑商业间谍的问题，再考虑你是不是应该要加薪了。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;   
从第二个论点，我回想起以前和现在碰到的HR，发现他们的职能基本都不是很明确。或者说，多半明确的职能越界了。检查考勤，计算工资奖惩，招聘，安排培训，处理人事材料，负责离职事宜，这是HR的基本几个职务。我碰到的多数情况下，检查考勤和计算工资都由行政代劳，奖惩是老板拍脑袋的。招聘，处理人事材料和负责离职事宜倒是行政负责，但是基本没有企业安排培训。相反，人事的最大用途就是和员工谈判工资和福利，能压多少压多少。甚至很多人事的工资和他的谈判能力成正比。&lt;br /&gt;
   
这招对初级的岗位用用还可以，但是对于中级以上的技术人员，是绝对不能用的。应当说，凡是五年以上的程序员，应当禁止HR砍价，直接让老总去谈。为什么？具体看上面的论点三，招一个靠谱的人难阿。往往一个靠谱的职工，仅招聘成本就以千计。以一年期合同来说，为了每月500的价钱（一年大概差6000）谈跑了一个程序员，不仅招聘成本都打了水漂，而且再要招人还会更加困难（一方面是很难碰到，另一方面很多老程序员都互相认识）。这种HR不被问责才有鬼了。&lt;br /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>万税万税万万税</title>
      <link>http://shell909090.org/blog/archives/1680/</link>
      <pubDate>Mon, 17 Jan 2011 16:17:00 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1680/</guid>
      <description>&lt;p&gt;一年一度，我们又迎来了发年终奖的时候。不知道有多少人要准备跳槽，又有多少公司会迎来新人。无论如何，年终奖还是要发的。
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;  
 今年年终奖，老板还算挺给力。高兴了不到两天，老板来跟我谈扣税的问题了。按照税务规定，一年有一次年终奖可以分摊到一年12个月上的机会。其余的就只有合并入当月工资，交高的离谱的个所。贝壳挺走运，去年还没碰到过需要分摊的机会。然后执行分摊，贝壳的收入不算太低，反正高于7000，肯定小于22000，属于20%的征收比例。按照规定，假定贝壳有10000年终奖，首先要——交四金？&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

  
 是这样的，如果你要分摊到12个月上执行，就必须补缴公积金，因此，10000的年终奖先扣除18%的公积金，然后再扣除20%的税，剩下6200。

&lt;/div&gt;

&lt;div&gt;

    我靠，这不是奥迪进去奥拓出来么？

&lt;/div&gt;

&lt;div&gt;

  
 再说这个公积金基点问题吧。贝壳查了公积金规定，基本就是“享受只和年限有关，和交多少无关”。本来上海有“公积金最高按照三倍当地平均工资计算”的规定，贝壳刚工作的时候，上海平均工资的三倍是4400，贝壳交的就是最高额度的公积金。到了去年，根据统计局的数据，上海平均工资3800，三倍一执行，无疑问的超过了贝壳的工资。所以——贝壳的工资被全额征收了18%的公积金。

&lt;/div&gt;

&lt;div&gt;

    ——除了7%+7%的住房公积金，其余公积金你们还能再有用点么？

&lt;/div&gt;

&lt;div&gt;

  
 再说老板吧，月初阿姨来，和我聊到企业缴税情况，也是吓死人。首先交4%的建设税。道路建设基础教育，反正国家的发展离不开企业的大力支持。然后，假定是一般纳税人吧，对增值部分征收17%的增值税——这个所谓增值部分，仅仅算企业的原料，人是不算的。当然，各个行业不同，有些高科技公司仅仅执行12-15的税点。然后，公司要给员工开工资之前，先要缴44%的公积金企业部分。贝壳的6200的奖金，其实老板大概要拿出14400，到手43%，不到一半。企业的剩余盈利部分，最终要申报企业所得税。得，这么算下来，老板去年总销售额度所剩下的扩大生产基本差不多。

&lt;/div&gt;

&lt;div&gt;

    这不扯淡么？

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>空间，VPS和独立主机的对比</title>
      <link>http://shell909090.org/blog/archives/1659/</link>
      <pubDate>Tue, 21 Dec 2010 09:52:00 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1659/</guid>
      <description>&lt;div&gt;

  
 空间和VPS的差异最主要在支持的压力和配置的自由度上。通常而言，空间支持的压力比VPS要小，配置也更加不灵活，当然，也可以叫更加简单。两者都可以通过加钱来升级到更加性能优异的程度，因此很难说什么情况下该用什么。简单的做法是，如果空间能满足你的要求，就不要折腾VPS。通常折腾VPS的都起码是专业公司了，通常都有自己的网管。一般公司的误区是，希望自己拥有对机器的完整权限，因此更倾向于托管机器。然而托管机器的成本并不像你所想像的那样低廉。

&lt;/div&gt;

&lt;div&gt;

  
 首先，同样的硬件，在你手里的利用率一定比在VPS商手里的利用率低。这是理所当然的，VPS商就是通过组合不同的性能组合，精细调整压力，来赚钱的公司。在VPS商手里，基本每字节内存，每个CPU时间片都是充分利用的。而一旦你买进托管主机，用的掉不用掉这都是你的事情了。当然，与此对应的，当高压力到来的时候，VPS比自己托管机器的响应更快。基本只要信用卡刷下去，性能就立刻上去了。

&lt;/div&gt;

&lt;div&gt;

  
 同样，这个特性也比较适合那些资源的峰谷比特别夸张的公司，尤其是一些几个月内会受到超大压力，过后肯定会被放弃的项目。VPS方案可以允许你短期内租用一些机器来工作，过后没有扫尾工作。

&lt;/div&gt;

&lt;div&gt;

  
 其次，由小公司运作的设备，其平均无故障时间远低于专业VPS商，也低于主机托管商。道理也很简单，硬件的物理损坏会降低平均无故障时间。而虚拟主机和VPS都是通过无单点故障的均衡系统来解决这个问题的，这个方案对于只有几台设备的小公司不适用。更进一步说，如果万一出问题，非专业人员的恢复时间无论如何比专家来的慢。

&lt;/div&gt;

&lt;div&gt;

  
 最后，最主要的是，如果使用空间或者VPS，你无需关心硬件淘汰问题。通常网络公司很少碰到多年后使用寿命满导致的机器淘汰，通常都是性能不足而进行的机器替换。汰换下来的机器用起来不方便，卖掉不合算，是个很鸡肋的东西。VPS商会自行处理这些事情，并且在机房升级后，通常还会给用户一些自动升级。

&lt;/div&gt;

&lt;div&gt;

  
 我们现在来算一个实际问题，一个比较典型的小网站，平均同时在线人数大约是400人，峰谷比大约是1:5。页面滞留时间按照20s计算，每页面流量10K，每session内存消耗0.5M。为了支持峰值在线，大约需要1G内存，瞬时带宽消耗大概是1M/s，一个月的数据流量大约是600G。一台中等的1U小型服务器大概是2W，分摊到3年折旧，每个月就是600。1U的托管最低是6000（我怀疑现在哪里还能弄到这个价格），最高的有10W的。按照1.2W计算，一个月是1000。加上少量的中间费用，直接管理硬件的成本大约是1800-2000RMB/mo。dreamhost的不限空间不限带宽服务一个月费用是9美元，折合60RMB/mo不到。gplhost上的Xen服务器，60G硬盘1.2G内存360G带宽是70美元，折合450RMB/mo。其他厂家也有200-350RMB/mo不等的类似服务方案，不过有可能是基于OpenVZ的，有超卖的可能。

&lt;/div&gt;

&lt;div&gt;

  
 为了支持这个小网站，如果使用小型服务器托管方案，那就是一台服务器搞定，1800-2000RMB/mo。如果是Xen服务器，大约是900RMB/mo。如果是空间，性能顶得住就是60RMB/mo，顶不住就当场崩溃。

&lt;/div&gt;

&lt;div&gt;

  
 基本结论是，如果你的程序并不特别重要，那么用空间。如果应用的峰值内存消耗小于2G，那么用VPS。如果峰值内存消耗奇高，或者月流量超大，还是自己托管服务器稍微省点钱。

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>公司的网络服务选择</title>
      <link>http://shell909090.org/blog/archives/1652/</link>
      <pubDate>Thu, 16 Dec 2010 14:20:00 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1652/</guid>
      <description>&lt;p&gt;最近碰到不少朋友需要做网站，或者做一些网络产品对外服务。下面统一解答一些基础概念问题，程序员或者本行的人士可以不用继续往下看了，都是常识。
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;    1.网站/产品都包括什么东西？&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

  
 从最简单的来说，你做了几个页面，放在网络上，让其他人看，这个就属于网站的范畴了。更复杂的，论坛，wiki，产品目录，公司主页，都属于互联网网站/产品。\
&lt;div&gt;

&lt;div&gt;

    2.为了让别人可以访问你的产品/网站，你要做什么。

&lt;/div&gt;

&lt;div&gt;

  
 我们有个术语来描述“让所有人可以访问你的产品/网站”这个定义，叫做上线。作为基础，你需要一个服务器，和一个域名（这两个名字我们下面解释）。也许你需要一些其他东西来让网站上线，但是至少一个服务器和一个域名是必须的。域名是你对外宣传的基础，其他人通过域名来访问你的网站。服务器则是支持别人访问的系统。

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

  
 如果你打算对使用中国的服务器，或者说在中国经营，那么你需要在中国的网络管理部门进行备案。

&lt;/div&gt;

&lt;div&gt;

  
 如果你打算使用现有的程序，或者不需要开发程序，那么你可以忽略程序开发过程。但是大多数人都需要一些经过修改的程序，乃至于编写一些程序来让网站运行。

&lt;/div&gt;

&lt;div&gt;

  
 无论你在上面作出了何种选择，最终，你需要维护你的网站。如果你不熟悉这个过程，可能还需要一个人来管理这部分。

&lt;/div&gt;

&lt;div&gt;

    3.听起来很复杂的样子，那么，怎么做？

&lt;/div&gt;

&lt;div&gt;

    我们先解释怎么弄到服务器和域名，还有备案，程序开发和维护后面再说。

&lt;/div&gt;

&lt;div&gt;

  
 如果你对上面这一切完完全全一点点都无法理解，那么你可以不用继续阅读了。找一个信得过的专业人员，或者让信得过的人推荐一个，然后让他搞定这一切吧。

&lt;/div&gt;

&lt;div&gt;

  
 如果你还基本能听的明白，那么可以自己试着去买一个服务器和域名。我建议你从购买空间开始。

&lt;/div&gt;

&lt;div&gt;

    空间：多人合用               多人共享一个IP            
 只提供网页和邮件服务                 很难安装系统软件

&lt;/div&gt;

&lt;div&gt;

    VPS：多人合用               一台机器一个IP              提供所有服务
                             除了部分内核组件外，都很容易安装和更换

&lt;/div&gt;

&lt;div&gt;

    独立主机：一人独用        一台机器一个IP               提供所有服务
                            可以任意管理

&lt;/div&gt;

&lt;div&gt;

  
 通常，大多数空间服务商都提供域名购买服务。域名和空间都是要每年付费的。注意，由于空间很难安装系统软件，因此空间支持的语言通常都是限定的，现在大多数都是支持asp或者php，偶尔有支持其他语言的，不多。在进行程序开发或安装时，必须确定空间可以支持这种语言。

&lt;/div&gt;

&lt;div&gt;

  
 如果你面向中国的群众提供服务，或者机器在中国，就必须进行备案。一般的空间服务商也提供备案业务，不过备案的情况非常复杂而且随时都在变化，因此请询问清楚现在的情况再做决定。如果可以的话，我建议尽量不要将服务器托管在中国，或者购买cn域名。

&lt;/div&gt;

&lt;div&gt;

    4.我买了一个空间/VPS，还有域名，然后呢？

&lt;/div&gt;

&lt;div&gt;

  
 那么你需要把合适的程序开发出来，并且放上去。通常来说，你能想到的东西一般都有良好的开源实现。你可以咨询一下专业人士，并且尽量听从他们的建议。大多数个人和公司的需求，都可以通过在开源的论坛/blog/wiki/CMS系统/ERP系统上进行简单的配置/混合/定制开发来解决（很绕？简单来说，肯定有现成的）。千万不要低估开发的成本，也许你觉得程序员很便宜，想自己动手，找一些人做一个出来。但是就我的经验，在IT业没有经验的公司要进入这个领域，几乎没有成功的经历。主要问题在于不熟悉流程和管理，导致开发总是在莫名其妙的地方停顿，并且产品的质量很难控制。（简单来说，你会掉到泥潭里）

&lt;/div&gt;

&lt;div&gt;

  
 如果你真的需要进行开发，外包是一个方案，但是也很容易失败，问题的核心也是无法控制进度和质量。对于小规模的东西，找信得过的人单人开发或者推荐人开发是个可靠性很高的方案。

&lt;/div&gt;

&lt;div&gt;

    5.我有程序/我找到了合适的程序

&lt;/div&gt;

&lt;div&gt;

  
 恭喜你，现在离上线只有一步了。你需要将你的程序放到你的服务器上，并且将域名指到服务器上，这一步可以请一个专业人员来做一下。然后你的产品就上线了，我们管这个过程叫做部署。

&lt;/div&gt;

&lt;div&gt;

  
 但是，且慢高兴。除了第一次的部署，你还需要定期做例行维护。例如你运行了一个论坛，总不能让人上来全看到广告吧。你运行了wiki，上面全是骂你的话。你的产品目录需要经常更新，邮箱更是天天要看。通常你需要至少一个人，来盯着你的产品。如果不复杂，叫个行政兼职看看就好，如果比较复杂，还是请职业网管的好。如果你要将这个产品的名气打响，还需要进行产品的推广/营销工作。这部分就更加复杂了。

&lt;/div&gt;

&lt;div&gt;

    6.让我总结一下

&lt;/div&gt;

&lt;div&gt;

  
 你最好找一个专门的咨询人员，咨询一下有没有适合你的产品，能不能简单定制一下搞定。如果可以，你需要支持哪种语言的空间（如果你用空间的话），压力大概多大，能否支持。自己去购买合适的空间或者服务器，还有域名。然后让人（通常一事不烦二主，咨询人员也兼职部署）部署上去，并且找个人盯着。大概就是这样。

&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>中国有IT业么</title>
      <link>http://shell909090.org/blog/archives/1611/</link>
      <pubDate>Wed, 10 Nov 2010 17:43:00 +0800</pubDate>
      
      <guid>http://shell909090.org/blog/archives/1611/</guid>
      <description>&lt;p&gt;中国有IT业么？大家这么多年，看着IT业红红火火，其实神马都是浮云。
&lt;div&gt;&lt;/p&gt;

&lt;p&gt;    1.中国有宽带接入么？&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;div&gt;

    
没有，你可以找中国的强制法律文件，什么是宽带。结果只有字典上的定义，而没有强制标准。如果没有一个法律意义上的强制标准区分宽带，怎么能说什么是宽带，什么不是呢？结论就是，任何人都可以说——我在用宽带。这不等于没有？在唯一的一个WIFI接入加密标准和其他国家不同的国家，一个什么标准都要自定的国家，却没有宽带标准，真TMD扯淡。即使我们不说国家强制标准，我们说国际标准。目前上国际对宽带的定义已经是4Mbps，而中国目前大多数家庭所使用的标准还是1Mbps，偶尔见到有2Mbps的。而且大多数人的网络接入价格还和5-6年前没有任何变化。即使考虑通胀，我们说电信资费其实在缓慢下降，这和电信接入高速发展的事实也毫不相符。

&lt;/div&gt;

&lt;div&gt;

    2.没有宽带接入又如何？

&lt;/div&gt;

&lt;div&gt;

  
 我们要知道一个事实，中国的10亿网民，事实上都在使用窄带接入。宽带和窄带的最大差别在于，窄带只能承载文字和图片内容，而宽带可以承载高清视频/声音。中国大多数网民都是无法享受高清视频/声音的，也没有机会享受in
touch的信息服务。缓慢的网络速度注定你在使用网络的时候，下载到一个图片，就要在本地保存起来。下载一个光盘，就要保存起来。你不能像云端一样，将数据托管在网上，当需要的时候再下载。我们的硬盘，变成了巨型的互联网缓存器。

&lt;/div&gt;

&lt;div&gt;

    3.现在的互联网业不是挺红火？

&lt;/div&gt;

&lt;div&gt;

  
 贝壳原先听说过一个笑话，说眼镜一定要好好配，否则怎么怎么的。台下有人说，我的眼镜配的很好，眼睛去验光和眼镜完全一致。台上讲师冷冷的说了一句，配的不好的眼镜还有个缺点，戴个一年你的眼睛状况就会跟着眼镜走。。。

&lt;/div&gt;

&lt;div&gt;

  
 互联网也是一个类似的情况。贝壳调查的结果，很多用户并不介意接入商是否封锁P2P下载，很多用户也不介意带宽不足，因为他们只用QQ，上天涯和猫扑，早上要起床偷个菜。所以网络一定要随时通，其他就不要紧了。我们说我们的互联网业，其实是在中国的网络状况下，发展出来的畸形品。天涯，猫扑，QQ，都是低带宽时代的服务，但是直到今天经久不衰。用户黏性是一个原因，另一个原因是更强大的，具备下一代特征的服务根本跑不起来。QQ也发展过视频聊天，结果也就是网友准备找419乃至更极端的援交前要“验货”的时候用。你见过有人和朋友天天开个音频聊个不停么？有人说国外也没有啊，问题是人家手机通讯什么价钱，我们什么价钱。你见过开土豆和优酷慢到死的，土豆还专门出了客户端加速。你见过开youtube卡到死的么？中国不算。youtube在研究什么技术？高清视频分享。你试试让土豆出个720p视频分享看看？不说CDN费用，光是等待时间就会让用户跑光。

&lt;/div&gt;

&lt;div&gt;

    4.将来呢？

&lt;/div&gt;

&lt;div&gt;

  
 我不知道。如果中国宽带仍旧保持现状的话，在网络高速发展的背景下，中国的网络应用也许会在3-5年内就会再落后人家一代。在人家用着随手可得的高清视频的时候，我们还只能接受IPTV这种专用替代品。不过严格论起来，这也没什么，毕竟中国从来没心思在这方面真的赶超英美。。。

&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>